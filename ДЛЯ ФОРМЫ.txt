using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

//Задача 6: реализовать библиотеку классов для списка с пропусками
//Серия примеров: на форме организуется три списка -- чисел, строк и каталог цветочного магазина (класс Flower,
//включающий вид и цвет цветка)

namespace SkipListForm
{

    public partial class Form1 : Form
    {
        N6_ClassLib.SkipLibrary.SkipList<int> IntList = new N6_ClassLib.SkipLibrary.LinkedList<int>();
        N6_ClassLib.SkipLibrary.SkipList<string> StrList = new N6_ClassLib.SkipLibrary.LinkedList<string>();
        N6_ClassLib.SkipLibrary.SkipList<Flower> FlowerList = new N6_ClassLib.SkipLibrary.LinkedList<Flower>();


        public Form1()
        {
            InitializeComponent();
            this.MinimumSize = this.Size;
            LinkedRadio.Checked = true;
        }

        private void listViewBxox_Enter(object sender, EventArgs e)
        {
        }

        private void Form1_Load(object sender, EventArgs e)
        {
        }


        private void typeTabs_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (ImmutableRadio.Checked)
            {
                LinkedRadio.Checked = true;
                IntList = new N6_ClassLib.SkipLibrary.ArrayList<int>();
                StrList = new N6_ClassLib.SkipLibrary.ArrayList<string>();
                FlowerList = new N6_ClassLib.SkipLibrary.ArrayList<Flower>();
            }
            else
            {
                IntList.Clear();
                StrList.Clear();
                FlowerList.Clear();
            }

            switch (typeTabs.SelectedTab.Text)
            {
                case "int":
                    actionIntButton.Enabled = true;
                    actionStrButton.Enabled = false;
                    actionFlwrButton.Enabled = false;
                    break;
                case "string":
                    actionStrButton.Enabled = true;
                    actionIntButton.Enabled = false;
                    actionFlwrButton.Enabled = false;
                    break;
                case "Flower":
                    actionFlwrButton.Enabled = true;
                    actionIntButton.Enabled = false;
                    actionStrButton.Enabled = false;
                    break;
            }
        }

        private void LinkedRadio_CheckedChanged(object sender, EventArgs e)
        {
            if (LinkedRadio.Checked)
            {
                IntList = new N6_ClassLib.SkipLibrary.LinkedList<int>();
                StrList = new N6_ClassLib.SkipLibrary.LinkedList<string>();
                FlowerList = new N6_ClassLib.SkipLibrary.LinkedList<Flower>();
                listViewBox.Controls.Clear();
            }
        }

        private void ArrayRadio_CheckedChanged(object sender, EventArgs e)
        {
            if (ArrayRadio.Checked)
            {
                IntList = new N6_ClassLib.SkipLibrary.ArrayList<int>();
                StrList = new N6_ClassLib.SkipLibrary.ArrayList<string>();
                FlowerList = new N6_ClassLib.SkipLibrary.ArrayList<Flower>();
                listViewBox.Controls.Clear();
            }
        }

        private void actionIntButton_Click(object sender, EventArgs e)
        {
            if (N6_ClassLib.SkipLibrary.ListUtils.CheckForAll<int>(IntList,
                delegate (int num)
                {
                    return num < 0;
                }))
            {
                MessageBox.Show("All numbers are negative");
            }
            else
            {
                MessageBox.Show("Not all numbers are negative");
            }
        }

        private void actionStrButton_Click(object sender, EventArgs e)
        {
            int count = 0;
            N6_ClassLib.SkipLibrary.ListUtils.ForEach<string>(StrList,
                delegate (string s)
                {
                    if (s.Length == 3)
                        ++count;
                });

            MessageBox.Show("There are " + count.ToString() + " 3-letter words");
        }

        private void ImmutableRadio_CheckedChanged(object sender, EventArgs e)
        {
            if (ImmutableRadio.Checked)
            {
                IntList = new N6_ClassLib.SkipLibrary.ImmutableList<int>(IntList);
                StrList = new N6_ClassLib.SkipLibrary.ImmutableList<string>(StrList);
                FlowerList = new N6_ClassLib.SkipLibrary.ImmutableList<Flower>(FlowerList);
            }
        }

        private void actionFlwrButton_Click(object sender, EventArgs e)
        {
            IList<Flower> flowers = N6_ClassLib.SkipLibrary.ListUtils.FindAll<Flower>(FlowerList, delegate (Flower flw)
            {
                return flw.colour == "white";
            },
                delegate
                {
                    if (ArrayRadio.Checked)
                        return new N6_ClassLib.SkipLibrary.ArrayList<Flower>();
                    return new N6_ClassLib.SkipLibrary.LinkedList<Flower>();
                });


            FlowerList = (N6_ClassLib.SkipLibrary.SkipList<Flower>)flowers;

            if (ImmutableRadio.Checked)
            {
                FlowerList = new N6_ClassLib.SkipLibrary.ImmutableList<Flower>(FlowerList);
            }

            FlowerList.Display(ref listViewBox);
        }

        private void addButton_Click(object sender, EventArgs e)
        {
            try
            {
                switch (typeTabs.SelectedTab.Text)
                {
                    case "int":
                        int n;
                        if (!int.TryParse(intBox.Text, out n))
                            MessageBox.Show("Warning: wrong number", "ERROR");
                        else
                        {
                            IntList.Add(n);
                            IntList.Display(ref listViewBox);
                        }
                        break;
                    case "string":
                        StrList.Add(stringBox.Text);
                        StrList.Display(ref listViewBox);
                        break;
                    case "Flower":
                        string name, colour;
                        name = nameBox.Text;
                        colour = colourBox.Text;
                        try
                        {
                            FlowerList.Add(new Flower(name, colour));
                            FlowerList.Display(ref listViewBox);
                        }
                        catch (Exception exception)
                        {
                            MessageBox.Show(exception.Message, "ERROR");
                        }
                        break;
                }
            }
            catch (Exception exception)
            {
                MessageBox.Show(exception.Message, "ERROR");
            }
        }

        private void removeButton_Click(object sender, EventArgs e)
        {
            try
            {
                switch (typeTabs.SelectedTab.Text)
                {
                    case "int":
                        int n;
                        if (!int.TryParse(intBox.Text, out n))
                            MessageBox.Show("Неверное число", "Ошибка");
                        else
                        {
                            IntList.Remove(n);
                            IntList.Display(ref listViewBox);
                        }
                        break;
                    case "string":
                        StrList.Remove(stringBox.Text);
                        StrList.Display(ref listViewBox);
                        break;
                    case "Flower":
                        string name, colour;
                        name = nameBox.Text;
                        colour = colourBox.Text;
                        FlowerList.Remove(new Flower(name, colour));
                        FlowerList.Display(ref listViewBox);

                        break;
                }
            }
            catch (Exception exception)
            {
                MessageBox.Show(exception.Message, "ERROR");
            }
        }

        private void findButton_Click(object sender, EventArgs e)
        {
            try
            {
                switch (typeTabs.SelectedTab.Text)
                {
                    case "int":
                        int n;
                        if (!int.TryParse(intBox.Text, out n))
                            MessageBox.Show("Warning: wrong number", "Error");
                        else
                        {
                            if (IntList.Contains(n))
                                MessageBox.Show("The List contains such number");
                            else
                                MessageBox.Show("There is no such number");
                        }
                        break;
                    case "string":
                        if (StrList.Contains(stringBox.Text))
                            MessageBox.Show("The List contains such string");
                        else
                            MessageBox.Show("There is no such string");
                        break;
                    case "Flower":
                        string name, colour;
                        name = nameBox.Text;
                        colour = colourBox.Text;
                        if (FlowerList.Contains(new Flower(name, colour)))
                            MessageBox.Show("The List contains such flower");
                        else
                            MessageBox.Show("There is no such flower");
                        break;
                }
            }
            catch (Exception exception)
            {
                MessageBox.Show(exception.Message, "Ошибка");
            }
        }
    }
}
